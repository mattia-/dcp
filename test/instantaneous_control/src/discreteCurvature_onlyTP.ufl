#/* 
# *  Copyright (C) 2016, Ivan Fumagalli, ivan.fumagalli@polimi.it
# * 
# *  This file is part of the DCP library
# *   
# *   The DCP library is free software: you can redistribute it and/or modify
# *   it under the terms of the GNU General Public License as published by
# *   the Free Software Foundation, either version 3 of the License, or
# *   (at your option) any later version.
# *
# *   The DCP library is distributed in the hope that it will be useful,
# *   but WITHOUT ANY WARRANTY; without even the implied warranty of
# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# *   GNU General Public License for more details.
# *
# *   You should have received a copy of the GNU General Public License
# *   along with the DCP library.  If not, see <http://www.gnu.org/licenses/>. 
# */ 

# UFL file to compute the triple-point term to assemble the discrete curvature
# of the free surface (label 1) via Gauss formula for surfaces
#

# define mesh dimension
cell = triangle

# define function spaces
Zu = VectorElement ("Lagrange", cell, 1)
Zp = FiniteElement ("Lagrange", cell, 1)
Z = Zu * Zp

# define test function
phiup = TestFunction (Z)
phi, phip = split (phiup)

# define coefficients
n = FacetNormal(cell)
h = MaxFacetEdgeLength(cell)
h_dx = Circumradius(cell)
x = SpatialCoordinate (cell)
#th = -pi/2
#A = as_matrix([[cos(th) , -sin(th)] , [sin(th) , cos(th)]])
A = as_matrix ([ [0 , 1] , [-1 , 0] ])

# define linear form
L =   (2.0/h) * inner(A * n, phi) * ds(6)
