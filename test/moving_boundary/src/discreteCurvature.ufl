#/* 
# *  Copyright (C) 2016, Ivan Fumagalli, ivan.fumagalli@polimi.it
# * 
# *  This file is part of the DCP library
# *   
# *   The DCP library is free software: you can redistribute it and/or modify
# *   it under the terms of the GNU General Public License as published by
# *   the Free Software Foundation, either version 3 of the License, or
# *   (at your option) any later version.
# *
# *   The DCP library is distributed in the hope that it will be useful,
# *   but WITHOUT ANY WARRANTY; without even the implied warranty of
# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# *   GNU General Public License for more details.
# *
# *   You should have received a copy of the GNU General Public License
# *   along with the DCP library.  If not, see <http://www.gnu.org/licenses/>. 
# */ 

# UFL file to compute the discrete curvature of the free surface (label 1)
# via Gauss formula for surfaces
# NB : the triple-point term has to be considered separately
#
# define mesh dimension
cell = triangle

# define function spaces
Zu = VectorElement ("Lagrange", cell, 1)
Zp = FiniteElement ("Lagrange", cell, 1)
Z = Zu * Zp

# define test and trial functions
curvup = TrialFunction (Z)
curv, curvp = split (curvup)
phiup = TestFunction (Z)
phi, phip = split (phiup)

# define coefficients
n = FacetNormal(cell)
h = MaxFacetEdgeLength(cell)
h_dx = Circumradius(cell)
x = SpatialCoordinate (cell)

# define forms
a = inner (curv, phi) * ds (1)

L = (Dx(x[0]*phi[0],0) + x[0]*Dx(phi[1],1)) * ds(1) \
    - inner (grad(phi), outer (n,n)) * x[0] * ds(1)
