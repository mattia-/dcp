#/* 
# *  Copyright (C) 2015, Ivan Fumagalli, ivan.fumagalli@polimi.it
# * 
# *  This file is part of the DCP library
# *   
# *   The DCP library is free software: you can redistribute it and/or modify
# *   it under the terms of the GNU General Public License as published by
# *   the Free Software Foundation, either version 3 of the License, or
# *   (at your option) any later version.
# *
# *   The DCP library is distributed in the hope that it will be useful,
# *   but WITHOUT ANY WARRANTY; without even the implied warranty of
# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# *   GNU General Public License for more details.
# *
# *   You should have received a copy of the GNU General Public License
# *   along with the DCP library.  If not, see <http://www.gnu.org/licenses/>. 
# */ 

# UFL file for time dependent, moving domain (ALE) Navier-Stokes simulation
#
# define mesh dimension
cell = triangle

# define function spaces
V = VectorElement ("Lagrange", cell, 2)
Q = FiniteElement ("Lagrange", cell, 1)
T = V * Q

# define test and trial functions
trial = Coefficient (T)
test = TestFunction (T)
u_old = Coefficient (V)

u, p = split (trial)
v, q = split (test)

# define coefficients
nu = Constant (cell)
dt = Constant (cell)

# define non linear equation
F = inner (u, v) * dx \
    - inner (u_old, v) * dx \
    + dt * nu * inner (grad (u), grad (v)) * dx \
    + dt * inner (dot (grad (u), u), v) * dx \
    - dt * inner (p, div (v)) * dx \
    + inner (div (u), q) * dx

# define test and trial function for jacobian
dtrial = TrialFunction (T)
du, dp = split (dtrial)

# define jacobian
J = inner (du, v) * dx \
    + dt * nu * inner (grad (du), grad (v)) * dx \
    + dt * inner (dot (grad (u), du), v) * dx \
    + dt * inner (dot (grad (du), u), v) * dx \
    - dt * inner (dp, div (v)) * dx \
    + inner (div (du), q) * dx 
