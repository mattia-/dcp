# UFL file to compute errors between exact and approximated solution
# 
# domain
cell = triangle 

# function spaces
R = FiniteElement ("Lagrange", cell, 2)
V = VectorElement ("Lagrange", cell, 2)
Q = FiniteElement ("Lagrange", cell, 1)

# coefficients
rho = Coefficient (R)
exact_rho = Coefficient (R)
u = Coefficient (V)
exact_u = Coefficient (V)
p = Coefficient (Q)
exact_p = Coefficient (Q)
    
# forms
density_L2_squared_error = inner (rho - exact_rho, rho - exact_rho) * dx
velocity_L2_squared_error = inner (u - exact_u, u - exact_u) * dx
velocity_H1_squared_error = inner (u - exact_u, u - exact_u) * dx \
                            + inner (grad (u - exact_u), grad (u - exact_u)) * dx 
pressure_L2_squared_error = inner (p - exact_p, p - exact_p) * dx
            
forms = [density_L2_squared_error,
         velocity_L2_squared_error, 
         velocity_H1_squared_error,
         pressure_L2_squared_error]
