#/* 
# *  Copyright (C) 2014, Mattia Tamellini, mattia.tamellini@gmail.com
# * 
# *  This file is part of the DCP library
# *   
# *   The DCP library is free software: you can redistribute it and/or modify
# *   it under the terms of the GNU General Public License as published by
# *   the Free Software Foundation, either version 3 of the License, or
# *   (at your option) any later version.
# *
# *   The DCP library is distributed in the hope that it will be useful,
# *   but WITHOUT ANY WARRANTY; without even the implied warranty of
# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# *   GNU General Public License for more details.
# *
# *   You should have received a copy of the GNU General Public License
# *   along with the DCP library.  If not, see <http://www.gnu.org/licenses/>. 
# */ 

# UFL file for Navier-Stokes adjoint
#
# define mesh dimension
cell = triangle

# define function spaces
Eta = VectorElement ("Lagrange", cell, 2)
Phi = FiniteElement ("Lagrange", cell, 1)
T = Eta * Phi

# define test and trial functions
trial = TrialFunction (T)
test = TestFunction (T)

xi, theta = split (trial)
eta, phi = split (test)

# define coefficients
nu = Constant (cell)
u  = Coefficient (Eta)
U  = Coefficient (Eta)
p  = Coefficient (Phi)
P  = Coefficient (Phi)
F_u = u - U
F_p = P - p

# bilinear form
a = nu * inner (grad (xi), grad (eta)) * dx \
     + inner (dot (transpose (grad (u)), xi), eta) * dx \
     - inner (dot (grad (xi), u), eta) * dx \
     - inner (theta, div (eta)) * dx \
     + inner (div (xi), phi) * dx \
     + dot (u, cell.n) * dot (xi, eta) * ds (1)

# linear form
L = inner (F_u, eta) * dx (1) + inner (F_p, phi) * dx (1)
